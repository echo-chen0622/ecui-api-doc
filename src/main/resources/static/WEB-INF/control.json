[{"name":"Calendar.Button","fileName":"Calendar-Button","parent":"Button","brief":"控件的前进后退控制部件。","desc":"","access":"public","pathFrom":"...\\src\\calendar.js","example":"","children":[],"methods":[ {"fileName":"Calendar-Button-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Calendar-Button-$click","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_nMove","desc":""}]}, {"name":"Dialog.Close","fileName":"Dialog-Close","parent":"Button","brief":"初始化窗体控件的关闭按钮部件。","desc":"","access":"public","pathFrom":"...\\src\\dialog.js","example":"","children":[],"methods":[ {"fileName":"Dialog-Close-$click","isEvent":"","brief":"窗体关闭按钮点击关闭窗体。"}],"variables":[{"repeat":"","name":"_bModal","desc":"是否使用showModal激活"}, {"repeat":"","name":"_uTitle","desc":"标题栏"}]}, {"name":"Select.Options","fileName":"Select-Options","parent":"Control","brief":"初始化下拉框控件的下拉选项框部件。","desc":"","access":"public","pathFrom":"...\\src\\select.js","example":"","children":[],"methods":[ {"fileName":"Select-Options-$show","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_nOptionSize","desc":"下接选择框可以用于选择的条目数量"}, {"repeat":"","name":"_cSelected","desc":"当前选中的选项"}, {"repeat":"","name":"_uText","desc":"下拉框的文本框"}]}, {"name":"esr.CreateObject","fileName":"esr-CreateObject","parent":"Control","brief":"","desc":"","access":"","pathFrom":"...\\src\\esr.js","example":"","children":[],"methods":[ {"fileName":"esr-CreateObject-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"esr-CreateObject-getValue","isEvent":"","brief":""}],"variables":[]}, {"name":"Label","fileName":"Label","parent":"Control","brief":"初始化标签控件。","desc":"options&nbsp;对象支持的属性如下：</br>for&nbsp;被转发的控件&nbsp;id</br>","access":"public","pathFrom":"...\\src\\label.js","example":"Label&nbsp;-&nbsp;定义事件转发的基本操作。</br>标签控件，继承自基础控件，将事件转发到指定的控件上，通常与&nbsp;Radio、Checkbox&nbsp;等控件联合使用，扩大点击响应区域。</br></br>标签控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:label;for:checkbox&quot;&gt;&lt;/div&gt;</br></br>","children":[],"methods":[ {"fileName":"Label-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Label-$click","isEvent":"","brief":"鼠标单击控件事件的默认处理。"},{"fileName":"Label-setFor","isEvent":"","brief":"设置控件的事件转发接收控件。"}],"variables":[{"repeat":"","name":"_cFor","desc":""}]}, {"name":"Upload","fileName":"Upload","parent":"Control","brief":"初始化标签控件。","desc":"options&nbsp;对象支持的属性如下：</br>","access":"public","pathFrom":"...\\src\\upload.js","example":"Upload&nbsp;-&nbsp;文件上传控件。</br>文件上传控件，继承自基础控件，内部必须包含&lt;input&nbsp;type=&quot;file&quot;&gt;的标签，可以包含或不包含进度控件，如果包含就会自动设置进度控件参数。</br></br>标签控件直接HTML初始化的例子:</br>&lt;label&nbsp;ui=&quot;type:upload&quot;&gt;</br>&lt;input&nbsp;type=&quot;file&quot;&nbsp;name=&quot;file&quot;&gt;</br>&lt;div&nbsp;ui=&quot;type:progress-bar&quot;&gt;&lt;/div&gt;</br>&lt;/label&gt;</br>或</br>&lt;label&nbsp;ui=&quot;type:upload&quot;&gt;</br>&lt;input&nbsp;type=&quot;file&quot;&nbsp;name=&quot;file&quot;&gt;</br>&lt;div&nbsp;ui=&quot;type:progress-circle&quot;&gt;&lt;/div&gt;</br>&lt;/label&gt;</br></br>","children":[],"methods":[ {"fileName":"Upload-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Upload-$dispose","isEvent":"","brief":""},{"fileName":"Upload-init","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_sUrl","desc":""}, {"repeat":"","name":"_eFile","desc":""}]}, {"name":"Retina","fileName":"Retina","parent":"Control","brief":"初始化单选框控件。","desc":"","access":"public","pathFrom":"...\\src\\retina.js","example":"","children":[],"methods":[ {"fileName":"Retina-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Retina-src","isEvent":"","brief":""}],"variables":[]}, {"name":"Tab.Item","fileName":"Tab-Item","parent":"Item","brief":"初始化选项卡控件的选项部件。","desc":"options&nbsp;对象支持的特定属性如下：</br>container&nbsp;容器的id，如果通过这里设置，不允许改变关联容器</br>selected&nbsp;当前项是否被选中</br>","access":"protected","pathFrom":"...\\src\\tab.js","example":"","children":[],"methods":[ {"fileName":"Tab-Item-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Tab-Item-$dispose","isEvent":"","brief":""},{"fileName":"Tab-Item-$setParent","isEvent":"","brief":""},{"fileName":"Tab-Item-getContainer","isEvent":"","brief":"获取选项卡对应的容器元素。"},{"fileName":"Tab-Item-setContainer","isEvent":"","brief":"设置选项卡对应的容器元素。"}],"variables":[{"repeat":"","name":"_cSelected","desc":"当前选中的选项卡"}, {"repeat":"","name":"_eContainer","desc":""}]}, {"name":"MonthView.Date","fileName":"MonthView-Date","parent":"Control","brief":"初始化日历控件的单元格内容部件。","desc":"","access":"public","pathFrom":"...\\src\\month-view.js","example":"","children":[],"methods":[ {"fileName":"MonthView-Date-$click","isEvent":"","brief":"点击时，根据单元格类型触发相应的事件。"},{"fileName":"MonthView-Date-getDay","isEvent":"","brief":"获取单元格天的信息。"}],"variables":[{"repeat":"","name":"_bExtra","desc":"扩展的日期是否响应事件"}, {"repeat":"","name":"_nYear","desc":"年份"}, {"repeat":"","name":"_nMonth","desc":"月份(0-11)"}, {"repeat":"","name":"_aCells","desc":"日历控件内的所有单元格，其中第0-6项是日历的头部星期名称"}, {"repeat":"","name":"_oBegin","desc":"开始日期"}, {"repeat":"","name":"_oEnd","desc":"结束日期"}, {"repeat":"","name":"_oDate","desc":"当前选择日期"}, {"repeat":"","name":"_cSelected","desc":"当前选择的日历单元格"}, {"repeat":"","name":"_nDay","desc":""}]}, {"name":"Item","fileName":"Item","parent":"Control","brief":"初始化选项控件。","desc":"","access":"public","pathFrom":"...\\src\\items.js","example":"Item/Items&nbsp;-&nbsp;定义选项操作相关的基本操作。</br>选项控件，继承自基础控件，用于弹出菜单、下拉框、交换框等控件的单个选项，通常不直接初始化。选项控件必须用在使用选项组接口(Items)的控件中。</br>","children":[ {"name":"Tab.Item","brief":"初始化选项卡控件的选项部件。","fileName":"Tab-Item"},{"name":"Listbox.Item","brief":"初始化多选框控件的选项部件。","fileName":"Listbox-Item"},{"name":"Select.Item","brief":"初始化下拉框控件的选项部件。","fileName":"Select-Item"}],"methods":[],"variables":[]}, {"name":"CheckTree","fileName":"CheckTree","parent":"TreeView","brief":"初始化复选树控件。","desc":"options&nbsp;对象支持的属性如下：</br>name&nbsp;复选框的表单项的默认名称</br>value&nbsp;复选框的表单项的值</br>subject&nbsp;父复选框的标识，如果为true表示自动使用上级树节点作为父复选框，其它等价false的值表示不联动</br>","access":"public","pathFrom":"...\\src\\check-tree.js","example":"CheckTree&nbsp;-&nbsp;定义包含复选框的树形结构的基本操作。</br>包含复选框的树控件，继承自树控件。每一个选项包含一个复选框进行选择，除非特别的指定，否则子节点的复选框与父节点的复选框</br>自动联动。</br></br>树控件直接HTML初始化的例子:</br>&lt;ul&nbsp;ui=&quot;type:check-tree;fold:true;id:parent;name:part&quot;&gt;</br>&lt;!--&nbsp;当前节点的文本，如果没有整个内容就是节点的文本&nbsp;--&gt;</br>&lt;div&gt;节点的文本&lt;/div&gt;</br>&lt;!--&nbsp;这里放子控件，如果需要fold某个子控件，将子控件的style=&quot;display:none&quot;即可&nbsp;--&gt;</br>&lt;li&nbsp;ui=&quot;subject:other&quot;&gt;子控件文本&lt;/li&gt;</br>&lt;li&nbsp;ui=&quot;subject:true&quot;&gt;直接关联父节点树的checkbox&lt;/li&gt;</br>...</br>&lt;/ul&gt;</br></br>","children":[],"methods":[ {"fileName":"CheckTree-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"CheckTree-$cache","isEvent":"","brief":""},{"fileName":"CheckTree-getChecked","isEvent":"","brief":"获取包括当前树控件在内的全部选中的子树控件。"},{"fileName":"CheckTree-getValue","isEvent":"","brief":"获取当前树控件复选框的表单项的值。"},{"fileName":"CheckTree-init","isEvent":"","brief":""},{"fileName":"CheckTree-isChecked","isEvent":"","brief":"判断树控件是否选中。"},{"fileName":"CheckTree-setChecked","isEvent":"","brief":"设置当前树控件复选框选中状态。"}],"variables":[{"repeat":"","name":"_uCheckbox","desc":""}]}, {"name":"Control","fileName":"Control","parent":"null","brief":"初始化基础控件。","desc":"options&nbsp;对象支持的属性如下：</br>type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;控件的类型样式</br>primary&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;控件的基本样式</br>current&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;控件的当前样式</br>capturable&nbsp;&nbsp;是否需要捕获鼠标事件，默认捕获</br>userSelect&nbsp;&nbsp;是否允许选中内容，默认允许</br>focusable&nbsp;&nbsp;&nbsp;是否允许获取焦点，默认允许</br>resizable&nbsp;&nbsp;&nbsp;是否允许改变大小，默认不允许</br>disabled&nbsp;&nbsp;&nbsp;&nbsp;是否失效，默认有效</br>transparent&nbsp;是否透明，默认不透明</br>","access":"public","pathFrom":"...\\src\\control.js","example":"Control&nbsp;-&nbsp;ECUI&nbsp;的核心组成部分，定义所有控件的基本操作，不建议直接控件化。</br>基础控件是&nbsp;ECUI&nbsp;的核心组成部分，对&nbsp;DOM&nbsp;树上的节点区域进行封装。基础控件扩展了&nbsp;Element&nbsp;节点的标准事件(例如得到与失去焦点、激活等)，提供了方法对控件的基本属性(例如控件大小、位置与显示状态等)进行改变，是一切控件实现的基础。基本控件拥有四种状态：焦点(focus)、悬停(hover)、激活(active)与失效(disabled)。控件在创建过程中分为三个阶段：首先是填充控件所必须的&nbsp;DOM&nbsp;结构，然后缓存控件的属性信息，最后进行初始化真正的渲染并显示控件。</br></br>基础控件直接HTML初始化的例子，id指定名称，可以通过ecui.get(id)的方式访问控件:</br>&lt;div&nbsp;ui=&quot;type:control;id:demo&quot;&gt;</br>&lt;!--&nbsp;这里放控件包含的内容&nbsp;--&gt;</br>...</br>&lt;/div&gt;</br>&lt;div&nbsp;ui=&quot;id:demo&quot;&gt;</br>&lt;!--&nbsp;这里放控件包含的内容&nbsp;--&gt;</br>...</br>&lt;/div&gt;</br></br>","children":[ {"name":"Select.Options","brief":"初始化下拉框控件的下拉选项框部件。","fileName":"Select-Options"},{"name":"esr.CreateObject","brief":"","fileName":"esr-CreateObject"},{"name":"Label","brief":"初始化标签控件。","fileName":"Label"},{"name":"Upload","brief":"初始化标签控件。","fileName":"Upload"},{"name":"Retina","brief":"初始化单选框控件。","fileName":"Retina"},{"name":"MonthView.Date","brief":"初始化日历控件的单元格内容部件。","fileName":"MonthView-Date"},{"name":"Item","brief":"初始化选项控件。","fileName":"Item"},{"name":"Button","brief":"初始化按钮。","fileName":"Button"},{"name":"Dialog","brief":"初始化窗体控件。","fileName":"Dialog"},{"name":"MonthView","brief":"初始化日历控件。","fileName":"MonthView"},{"name":"Listbox","brief":"初始化多选框控件。","fileName":"Listbox"},{"name":"InputControl","brief":"初始化输入控件。","fileName":"InputControl"},{"name":"Table.Cell","brief":"初始化表格控件的单元格部件。","fileName":"Table-Cell"},{"name":"Progress","brief":"初始化进度控件。","fileName":"Progress"},{"name":"Table","brief":"初始化表格控件。","fileName":"Table"},{"name":"Table.Row","brief":"初始化表格控件的行部件。","fileName":"Table-Row"},{"name":"Table.HCell","brief":"初始化表格控件的列部件。","fileName":"Table-HCell"},{"name":"Tab","brief":"初始化选项卡控件。","fileName":"Tab"},{"name":"Dialog.Title","brief":"初始化窗体控件的标题栏部件。","fileName":"Dialog-Title"},{"name":"MultilevelSelect","brief":"初始化多级联动下拉框控件。","fileName":"MultilevelSelect"},{"name":"TreeView","brief":"初始化树视图控件。","fileName":"TreeView"},{"name":"esr.CreateArray","brief":"","fileName":"esr-CreateArray"}],"methods":[ {"fileName":"Control-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Control-$activate","isEvent":"true","brief":"控件获得激活事件的默认处理。"},{"fileName":"Control-$append","isEvent":"","brief":"控件添加子控件的默认处理。"},{"fileName":"Control-$blur","isEvent":"","brief":"控件失去焦点事件的默认处理。"},{"fileName":"Control-$cache","isEvent":"","brief":"缓存控件的属性。"},{"fileName":"Control-$deactivate","isEvent":"","brief":"控件失去激活事件的默认处理。"},{"fileName":"Control-$disable","isEvent":"","brief":"控件失效的默认处理。"},{"fileName":"Control-$dispose","isEvent":"","brief":"销毁控件的默认处理。"},{"fileName":"Control-$dragend","isEvent":"","brief":"控件拖拽结束的默认处理。"},{"fileName":"Control-$dragmove","isEvent":"","brief":"控件拖拽的默认处理。"},{"fileName":"Control-$dragstart","isEvent":"","brief":"控件拖拽开始的默认处理。"},{"fileName":"Control-$enable","isEvent":"","brief":"控件解除失效的默认处理。"},{"fileName":"Control-$focus","isEvent":"","brief":"控件获得焦点事件的默认处理。"},{"fileName":"Control-$getBasicHeight","isEvent":"","brief":"获取控件的基本高度。"},{"fileName":"Control-$getBasicWidth","isEvent":"","brief":"获取控件的基本宽度。"},{"fileName":"Control-$getSection","isEvent":"","brief":"获取指定的部件。"},{"fileName":"Control-$hide","isEvent":"","brief":"隐藏控件。"},{"fileName":"Control-$initStructure","isEvent":"","brief":"初始化控件的结构。"},{"fileName":"Control-$intercept","isEvent":"","brief":"控件强制拦截点击的默认处理。"},{"fileName":"Control-$mouseout","isEvent":"","brief":"鼠标移出事件的默认处理。"},{"fileName":"Control-$mouseover","isEvent":"true","brief":"鼠标移入事件的默认处理。"},{"fileName":"Control-$ready","isEvent":"","brief":"控件初始化完成的默认处理。"},{"fileName":"Control-$remove","isEvent":"","brief":"控件移除子控件的默认处理。"},{"fileName":"Control-$repaint","isEvent":"","brief":"控件对重绘的默认处理。"},{"fileName":"Control-$resize","isEvent":"","brief":"控件大小变化事件的默认处理。"},{"fileName":"Control-$scroll","isEvent":"","brief":"控件对滚动事件的默认处理。"},{"fileName":"Control-$setBody","isEvent":"","brief":"设置控件的内层元素。"},{"fileName":"Control-$setParent","isEvent":"","brief":"直接设置父控件。"},{"fileName":"Control-$setSize","isEvent":"","brief":"设置控件的大小。"},{"fileName":"Control-$show","isEvent":"","brief":"显示控件。"},{"fileName":"Control-alterClass","isEvent":"","brief":"为控件添加/移除一个扩展样式。"},{"fileName":"Control-alterSubType","isEvent":"","brief":"改变控件的子类型。"},{"fileName":"Control-appendTo","isEvent":"","brief":"将控件添加到页面元素中。"},{"fileName":"Control-blur","isEvent":"","brief":"控件失去焦点状态。"},{"fileName":"Control-cache","isEvent":"","brief":"缓存控件的属性。"},{"fileName":"Control-center","isEvent":"","brief":"控件居中显示。"},{"fileName":"Control-clearCache","isEvent":"","brief":"清除控件的缓存。"},{"fileName":"Control-contain","isEvent":"","brief":"判断是否包含指定的控件。"},{"fileName":"Control-disable","isEvent":"","brief":"控件获得失效状态。"},{"fileName":"Control-dispose","isEvent":"","brief":"销毁控件。"},{"fileName":"Control-enable","isEvent":"","brief":"控件解除失效状态。"},{"fileName":"Control-focus","isEvent":"","brief":"控件获得焦点状态。"},{"fileName":"Control-getBody","isEvent":"","brief":"获取控件的内层元素。"},{"fileName":"Control-getBodyHeight","isEvent":"","brief":"获取控件内层可使用区域的高度。"},{"fileName":"Control-getBodyWidth","isEvent":"","brief":"获取控件内层可使用区域的宽度。"},{"fileName":"Control-getClass","isEvent":"","brief":"获取控件的当前样式。"},{"fileName":"Control-getClasses","isEvent":"","brief":"获取控件的全部样式。"},{"fileName":"Control-getContent","isEvent":"","brief":"获取控件的内容。"},{"fileName":"Control-getHeight","isEvent":"","brief":"获取控件区域的高度。"},{"fileName":"Control-getMain","isEvent":"","brief":"获取控件的主元素。"},{"fileName":"Control-getMinimumHeight","isEvent":"","brief":"获取控件的最小高度。"},{"fileName":"Control-getMinimumWidth","isEvent":"","brief":"获取控件的最小宽度。"},{"fileName":"Control-getOuter","isEvent":"","brief":"获取控件的外层元素。"},{"fileName":"Control-getParent","isEvent":"","brief":"获取父控件。"},{"fileName":"Control-getPrimary","isEvent":"","brief":"获取控件的基本样式。"},{"fileName":"Control-getType","isEvent":"","brief":"获取控件的类型。"},{"fileName":"Control-getUID","isEvent":"","brief":"获取控件的内部唯一标识符。"},{"fileName":"Control-getWidth","isEvent":"","brief":"获取控件区域的宽度。"},{"fileName":"Control-getX","isEvent":"","brief":"获取控件的相对X轴坐标。"},{"fileName":"Control-getY","isEvent":"","brief":"获取控件的相对Y轴坐标。"},{"fileName":"Control-hide","isEvent":"","brief":"隐藏控件。"},{"fileName":"Control-init","isEvent":"","brief":"控件初始化。"},{"fileName":"Control-initStructure","isEvent":"","brief":"初始化控件的结构。"},{"fileName":"Control-isActived","isEvent":"","brief":"判断控件是否处于激活状态。"},{"fileName":"Control-isCapturable","isEvent":"","brief":"判断是否响应浏览器事件。"},{"fileName":"Control-isDisabled","isEvent":"","brief":"判断控件是否处于失效状态。"},{"fileName":"Control-isFocusable","isEvent":"","brief":"判断是否允许获得焦点。"},{"fileName":"Control-isFocused","isEvent":"","brief":"判断控件是否处于焦点状态。"},{"fileName":"Control-isHovered","isEvent":"","brief":"判断控件是否处于悬停状态。"},{"fileName":"Control-isReady","isEvent":"","brief":"判断控件是否完全生成。"},{"fileName":"Control-isResizable","isEvent":"","brief":"判断控件是否允许改变大小。"},{"fileName":"Control-isShow","isEvent":"","brief":"判断是否处于显示状态。"},{"fileName":"Control-isTransparent","isEvent":"","brief":"判断是否处于透明状态。"},{"fileName":"Control-isUserSelect","isEvent":"","brief":"判断是否允许选中内容。"},{"fileName":"Control-repaint","isEvent":"","brief":"控件刷新。"},{"fileName":"Control-resize","isEvent":"","brief":"控件重置大小并刷新。"},{"fileName":"Control-setBodySize","isEvent":"","brief":"设置控件可使用区域的大小。"},{"fileName":"Control-setClass","isEvent":"","brief":"设置控件的当前样式。"},{"fileName":"Control-setContent","isEvent":"","brief":"设置控件的内容。"},{"fileName":"Control-setParent","isEvent":"","brief":"设置当前控件的父控件。"},{"fileName":"Control-setPosition","isEvent":"","brief":"设置控件的坐标。"},{"fileName":"Control-setSize","isEvent":"","brief":"设置控件的大小。"},{"fileName":"Control-setTransparent","isEvent":"","brief":"设置控件是否处于透明状态。"},{"fileName":"Control-show","isEvent":"","brief":"显示控件。"}],"variables":[{"repeat":"","name":"_bCapturable","desc":"控件是否响应浏览器事件状态"}, {"repeat":"","name":"_bUserSelect","desc":"控件是否允许选中内容"}, {"repeat":"","name":"_bFocusable","desc":"控件是否允许获取焦点"}, {"repeat":"","name":"_bDisabled","desc":"控件的状态，为true时控件不处理任何事件"}, {"repeat":"","name":"_bCached","desc":"控件是否已经读入缓存"}, {"repeat":"","name":"_bReady","desc":"控件是否已经完全生成"}, {"repeat":"","name":"_bTransparent","desc":"控件是否透明，在这种状态下，事件可以穿透控件到达控件下方的控件，但会影响效率，请谨慎使用"}, {"repeat":"","name":"_sUID","desc":"控件的内部ID"}, {"repeat":"","name":"_sPrimary","desc":"控件定义时的基本样式"}, {"repeat":"","name":"_sClass","desc":"控件的当前样式"}, {"repeat":"","name":"_sSubType","desc":"控件的子类型"}, {"repeat":"","name":"_sWidth","desc":"控件的基本宽度值，可能是百分比或者空字符串"}, {"repeat":"","name":"_sHeight","desc":"控件的基本高度值，可能是百分比或者空字符串"}, {"repeat":"","name":"_eMain","desc":"控件的基本标签对象"}, {"repeat":"","name":"_eBody","desc":"控件用于承载子控件的载体标签，通过$setBody函数设置这个值，绑定当前控件"}, {"repeat":"","name":"_cParent","desc":"父控件对象"}, {"repeat":"","name":"_aStatus","desc":"控件当前的状态集合"}, {"repeat":"","name":"$$width","desc":"控件的宽度缓存"}, {"repeat":"","name":"$$height","desc":"控件的高度缓存"}, {"repeat":"","name":"$$border","desc":"边框线宽度缓存"}, {"repeat":"","name":"_bResizable","desc":""}]}, {"name":"Button","fileName":"Button","parent":"Control","brief":"初始化按钮。","desc":"options&nbsp;对象支持的属性如下：</br>","access":"public","pathFrom":"...\\src\\button.js","example":"Button&nbsp;-&nbsp;定义按钮的基本操作。</br>按钮控件，继承自基础控件，屏蔽了激活状态的向上冒泡，并且在激活(active)状态下鼠标移出控件区域会失去激活样式，移入控件区域再次获得激活样式，按钮控件中的文字不可以被选中。</br></br>按钮控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:button&quot;&gt;</br>&lt;!--&nbsp;这里放按钮的文字&nbsp;--&gt;</br>...</br>&lt;/div&gt;</br>或</br>&lt;button&nbsp;ui=&quot;type:button&quot;&gt;</br>&lt;!--&nbsp;这里放按钮的文字&nbsp;--&gt;</br>...</br>&lt;/button&gt;</br>或</br>&lt;input&nbsp;ui=&quot;type:button&quot;&nbsp;value=&quot;按钮文字&quot;&nbsp;type=&quot;button&quot;&gt;</br></br>","children":[ {"name":"Calendar.Button","brief":"控件的前进后退控制部件。","fileName":"Calendar-Button"},{"name":"Dialog.Close","brief":"初始化窗体控件的关闭按钮部件。","fileName":"Dialog-Close"}],"methods":[ {"fileName":"Button-constructionMethod","isEvent":"","brief":"构造方法"}],"variables":[]}, {"name":"Dialog","fileName":"Dialog","parent":"Control","brief":"初始化窗体控件。","desc":"","access":"public","pathFrom":"...\\src\\dialog.js","example":"Dialog&nbsp;-&nbsp;定义独立于文档布局的内容区域的基本操作。</br>窗体控件，继承自基础控件，仿真浏览器的多窗体效果，如果在其中包含&nbsp;iframe&nbsp;标签，可以在当前页面打开一个新的页面，避免了使用&nbsp;window.open&nbsp;在不同浏览器下的兼容性问题。多个窗体控件同时工作时，当前激活的窗体在最上层。窗体控件的标题栏默认可以拖拽，窗体可以设置置顶方式显示，在置顶模式下，只有当前窗体可以响应操作。窗体控件的&nbsp;z-index&nbsp;从4096开始，页面开发请不要使用大于或等于4096的&nbsp;z-index&nbsp;值。</br></br>窗体控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:dialog&quot;&gt;</br>&lt;strong&gt;窗体的标题&lt;/strong&gt;</br>&lt;!--&nbsp;这里放窗体的内容&nbsp;--&gt;</br>...</br>&lt;/div&gt;</br></br>","children":[],"methods":[ {"fileName":"Dialog-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Dialog-className","isEvent":"","brief":""},{"fileName":"Dialog-cssText","isEvent":"","brief":""},{"fileName":"Dialog-$cache","isEvent":"","brief":""},{"fileName":"Dialog-$dispose","isEvent":"","brief":"销毁窗体时需要先关闭窗体，并不再保留窗体的索引。"},{"fileName":"Dialog-$focus","isEvent":"","brief":"窗体控件获得焦点时需要将自己置于所有窗体控件的顶部。"},{"fileName":"Dialog-$hide","isEvent":"","brief":"窗体隐藏时将失去焦点状态，如果窗体是以&nbsp;showModal&nbsp;方式打开的，隐藏窗体时，需要恢复页面的状态。"},{"fileName":"Dialog-$show","isEvent":"","brief":"窗体显示时将获得焦点状态。"},{"fileName":"Dialog-hide","isEvent":"","brief":"如果窗体是以&nbsp;showModal&nbsp;方式打开的，只有位于最顶层的窗体才允许关闭。"},{"fileName":"Dialog-init","isEvent":"","brief":""},{"fileName":"Dialog-isDisabled","isEvent":"","brief":"showModal时如果窗体不置顶都设置为不可用。"},{"fileName":"Dialog-setBodySize","isEvent":"","brief":""},{"fileName":"Dialog-setTitle","isEvent":"","brief":"设置窗体控件标题。"},{"fileName":"Dialog-show","isEvent":"","brief":""},{"fileName":"Dialog-showModal","isEvent":"","brief":"窗体以独占方式显示"}],"variables":[{"repeat":"","name":"_bModal","desc":"是否使用showModal激活"}, {"repeat":"","name":"_uTitle","desc":"标题栏"}, {"repeat":"","name":"_uClose","desc":""}]}, {"name":"Checkbox","fileName":"Checkbox","parent":"InputControl","brief":"初始化复选框控件。","desc":"options&nbsp;对象支持的属性如下：</br>subject&nbsp;主复选框&nbsp;ID，会自动与主复选框建立关联后，作为主复选框的从属复选框之一</br>","access":"public","pathFrom":"...\\src\\checkbox.js","example":"Checkbox&nbsp;-&nbsp;定义单个设置项选择状态的基本操作。</br>复选框控件，继承自输入控件，实现了对原生&nbsp;InputElement&nbsp;复选框的功能扩展，支持复选框之间的主从关系定义。当一个复选框的“从复选框”选中一部分时，“主复选框”将处于半选状态，这种状态逻辑意义上等同于未选择状态，但显示效果不同，复选框的主从关系可以有多级。复选框控件适用所有在一组中允许选择多个目标的交互，并不局限于此分组的表现形式(文本、图片等)。</br></br>复选框控件直接HTML初始化的例子:</br>&lt;input&nbsp;ui=&quot;type:checkbox;subject:china&quot;&nbsp;name=&quot;city&quot;&nbsp;value=&quot;beijing&quot;&nbsp;checked=&quot;checked&quot;&nbsp;type=&quot;checkbox&quot;&gt;</br>或</br>&lt;div&nbsp;ui=&quot;type:checkbox;name:city;value:beijing;checked:true;subject:china&quot;&gt;&lt;/div&gt;</br>或</br>&lt;div&nbsp;ui=&quot;type:checkbox;subject:china&quot;&gt;</br>&lt;input&nbsp;name=&quot;city&quot;&nbsp;value=&quot;beijing&quot;&nbsp;checked=&quot;checked&quot;&nbsp;type=&quot;checkbox&quot;&gt;</br>&lt;/div&gt;</br></br>","children":[],"methods":[ {"fileName":"Checkbox-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Checkbox-$click","isEvent":"","brief":"控件点击时改变当前的选中状态。"},{"fileName":"Checkbox-$dispose","isEvent":"","brief":""},{"fileName":"Checkbox-$keydown","isEvent":"","brief":"接管对空格键的处理。"},{"fileName":"Checkbox-$keypress","isEvent":"","brief":"接管对空格键的处理。"},{"fileName":"Checkbox-$keyup","isEvent":"","brief":"接管对空格键的处理。"},{"fileName":"Checkbox-$ready","isEvent":"","brief":""},{"fileName":"Checkbox-$reset","isEvent":"","brief":""},{"fileName":"Checkbox-getDependents","isEvent":"","brief":"获取全部的从属复选框。"},{"fileName":"Checkbox-getSubject","isEvent":"","brief":"获取主复选框。"},{"fileName":"Checkbox-isChecked","isEvent":"","brief":"判断控件是否选中。"},{"fileName":"Checkbox-setChecked","isEvent":"","brief":"设置复选框控件选中状态。"},{"fileName":"Checkbox-setSubject","isEvent":"","brief":"设置主复选框。"}],"variables":[{"repeat":"","name":"_bDefault","desc":"默认的选中状态"}, {"repeat":"","name":"_nStatus","desc":"复选框当前的状态，0--全选，1--未选，2--半选"}, {"repeat":"","name":"_cSubject","desc":"主复选框"}, {"repeat":"","name":"_aDependents","desc":""}]}, {"name":"MonthView","fileName":"MonthView","parent":"Control","brief":"初始化日历控件。","desc":"options&nbsp;对象支持的属性如下：</br>year&nbsp;&nbsp;&nbsp;&nbsp;日历控件的年份</br>month&nbsp;&nbsp;&nbsp;日历控件的月份(1-12)</br>begin&nbsp;&nbsp;&nbsp;开始日期，小于这个日期的日历单元格会被disabled</br>end&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结束日期，大于这个日期的日历单元格会被disabled</br>date&nbsp;&nbsp;&nbsp;&nbsp;初始选中的日期，默认是今日</br>extra&nbsp;&nbsp;&nbsp;扩展的日期是否响应事件，默认为enable，如果需要响应事件设置成disable</br>","access":"public","pathFrom":"...\\src\\month-view.js","example":"MonthView&nbsp;-&nbsp;定义日历显示的基本操作。</br>日历视图控件，继承自基础控件，不包含年/月/日的快速选择与切换，如果需要实现这些功能，请将下拉框(选择月份)、输入框(输入年份)等组合使用建立新的控件或直接在页面上布局并调用接口。</br></br>日历视图控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:month-view;year:2009;month:11&quot;&gt;&lt;/div&gt;</br></br></br>子控件属性</br>","children":[ {"name":"Calendar","brief":"初始化日历控件。","fileName":"Calendar"}],"methods":[ {"fileName":"MonthView-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"MonthView-$change","isEvent":"","brief":""},{"fileName":"MonthView-$dateclick","isEvent":"","brief":"日期点击事件默认处理。"},{"fileName":"MonthView-$ready","isEvent":"","brief":""},{"fileName":"MonthView-getDays","isEvent":"","brief":"获取全部的日期对象。"},{"fileName":"MonthView-getDate","isEvent":"","brief":"获取当前选择的日期。"},{"fileName":"MonthView-getMonth","isEvent":"","brief":"获取日历控件当前显示的月份。"},{"fileName":"MonthView-getYear","isEvent":"","brief":"获取日历控件当前显示的年份。"},{"fileName":"MonthView-move","isEvent":"","brief":"日历显示移动指定的月份数。"},{"fileName":"MonthView-setDate","isEvent":"","brief":"设置当前选择的日期，并切换到对应的月份。"},{"fileName":"MonthView-setRange","isEvent":"","brief":"设置日历控件的有效日期范围。"},{"fileName":"MonthView-setView","isEvent":"","brief":"设置日历控件当前显示的月份。"}],"variables":[{"repeat":"","name":"_bExtra","desc":"扩展的日期是否响应事件"}, {"repeat":"","name":"_nYear","desc":"年份"}, {"repeat":"","name":"_nMonth","desc":"月份(0-11)"}, {"repeat":"","name":"_aCells","desc":"日历控件内的所有单元格，其中第0-6项是日历的头部星期名称"}, {"repeat":"","name":"_oBegin","desc":"开始日期"}, {"repeat":"","name":"_oEnd","desc":"结束日期"}, {"repeat":"","name":"_oDate","desc":"当前选择日期"}, {"repeat":"","name":"_cSelected","desc":"当前选择的日历单元格"}]}, {"name":"Listbox","fileName":"Listbox","parent":"Control","brief":"初始化多选框控件。","desc":"","access":"public","pathFrom":"...\\src\\listbox.js","example":"Listbox&nbsp;-&nbsp;定义了多项选择的基本操作。</br>多选框控件，继承自截面控件，实现了选项组接口，多个交换框，可以将选中的选项在互相之间移动。多选框控件也可以单独的使用，选中的选项在表单提交时将被提交。</br></br>多选框控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:listbox;name:test&quot;&gt;</br>&lt;!--&nbsp;这里放选项内容&nbsp;--&gt;</br>&lt;div&gt;选项&lt;/div&gt;</br>...</br>&lt;/div&gt;</br></br></br>选项属性</br>","children":[],"methods":[ {"fileName":"Listbox-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Listbox-$alterItems","isEvent":"","brief":""},{"fileName":"Listbox-getName","isEvent":"","brief":"获取控件的表单项名称。"},{"fileName":"Listbox-getSelected","isEvent":"","brief":"获取所有选中的选项。"},{"fileName":"Listbox-selectAll","isEvent":"","brief":"选中所有的选项。"},{"fileName":"Listbox-setName","isEvent":"","brief":"设置控件的表单项名称。"}],"variables":[{"repeat":"","name":"_sName","desc":"多选框内所有input的名称"}]}, {"name":"LockedTable","fileName":"LockedTable","parent":"Table","brief":"初始化高级表格控件。","desc":"options&nbsp;对象支持的属性如下：</br>left-lock&nbsp;&nbsp;左边需要锁定的列数</br>right-lock&nbsp;右边需要锁定的列数</br>","access":"public","pathFrom":"...\\src\\locked-table.js","example":"LockedTable&nbsp;-&nbsp;定义允许左右锁定若干列显示的高级表格的基本操作。</br>允许锁定左右两列的高级表格控件，继承自表格控件，内部包含两个部件——锁定的表头区(基础控件)与锁定的行内容区(基础控件)。</br></br>锁定列高级表格控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:locked-table;left-lock:2;right-lock:1&quot;&gt;</br>&lt;table&gt;</br>&lt;!--&nbsp;当前节点的列定义，如果有特殊格式，需要使用width样式&nbsp;--&gt;</br>&lt;thead&gt;</br>&lt;tr&gt;</br>&lt;th&gt;标题&lt;/th&gt;</br>...</br>&lt;/tr&gt;</br>&lt;/thead&gt;</br>&lt;tbody&gt;</br>&lt;!--&nbsp;这里放单元格序列&nbsp;--&gt;</br>&lt;tr&gt;</br>&lt;td&gt;单元格一&lt;/td&gt;</br>...</br>&lt;/tr&gt;</br>...</br>&lt;/tbody&gt;</br>&lt;/table&gt;</br>&lt;/div&gt;</br></br></br>表格行与锁定行属性</br>","children":[],"methods":[ {"fileName":"LockedTable-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"LockedTable-$cache","isEvent":"","brief":""},{"fileName":"LockedTable-$dispose","isEvent":"","brief":""},{"fileName":"LockedTable-$initStructure","isEvent":"","brief":""},{"fileName":"LockedTable-$resize","isEvent":"","brief":""},{"fileName":"LockedTable-$scroll","isEvent":"","brief":""},{"fileName":"LockedTable-addColumn","isEvent":"","brief":""},{"fileName":"LockedTable-addRow","isEvent":"","brief":""},{"fileName":"LockedTable-removeColumn","isEvent":"","brief":""},{"fileName":"LockedTable-removeRow","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_nLeft","desc":"最左部未锁定列的序号"}, {"repeat":"","name":"_nRight","desc":"最右部未锁定列的后续序号，即未锁定的列序号+1"}, {"repeat":"","name":"_uLockedHead","desc":"锁定的表头区"}, {"repeat":"","name":"_uLockedMain","desc":"锁定的行内容区"}, {"repeat":"可能与...\\src\\table.js文件中,Table控件下变量重名","name":"_aHeadRows","desc":""}, {"repeat":"可能与...\\src\\table.js文件中,Table控件下变量重名","name":"_aRows","desc":""}, {"repeat":"可能与...\\src\\table.js文件中,Table控件下变量重名","name":"_uHead","desc":""}, {"repeat":"","name":"_eFill","desc":""}, {"repeat":"","name":"_uLeftHead","desc":""}, {"repeat":"","name":"_uRightHead","desc":""}, {"repeat":"","name":"_uLeftMain","desc":""}, {"repeat":"","name":"_uRightMain","desc":""}, {"repeat":"可能与...\\src\\table.js文件中,Table控件下变量重名","name":"_bHeadFloat","desc":""}]}, {"name":"ProgressBar","fileName":"ProgressBar","parent":"Progress","brief":"初始化进度条控件。","desc":"options&nbsp;对象支持的属性如下：</br>","access":"public","pathFrom":"...\\src\\progress-bar.js","example":"ProgressBar&nbsp;-&nbsp;使用进度条定义进度。</br>进度条控件，继承自进度控件，使用进度条显示一个任务执行的程度。</br></br>进度条控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:progress-bar;max:100;value:0&quot;&gt;&lt;/div&gt;</br></br>","children":[],"methods":[ {"fileName":"ProgressBar-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"ProgressBar-$dispose","isEvent":"","brief":""},{"fileName":"ProgressBar-$initStructure","isEvent":"","brief":""},{"fileName":"ProgressBar-$progress","isEvent":"","brief":""}],"variables":[{"repeat":"可能与...\\src\\progress.js文件中,Progress控件下变量重名","name":"_eMask","desc":""}]}, {"name":"InputControl","fileName":"InputControl","parent":"Control","brief":"初始化输入控件。","desc":"options&nbsp;对象支持的属性如下：</br>name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输入框的名称</br>value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输入框的默认值</br>checked&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输入框是否默认选中(radio/checkbox有效)</br>inputType&nbsp;&nbsp;&nbsp;&nbsp;输入框的类型，默认为&nbsp;text</br>readOnly&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输入框是否只读</br>valid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在什么情况下校验，表单提交时一定会校验，blur表示需要在失去焦点时校验</br>","access":"public","pathFrom":"...\\src\\input-control.js","example":"InputControl&nbsp;-&nbsp;定义输入数据的基本操作，不建议直接控件化。</br>输入控件，继承自基础控件，实现了对原生&nbsp;InputElement&nbsp;的功能扩展，包括光标的控制、输入事件的实时响应(每次改变均触发事件)，以及&nbsp;IE&nbsp;下不能动态改变输入框的表单项名称的模拟处理。</br></br>输入控件直接HTML初始化的例子:</br>&lt;input&nbsp;ui=&quot;type:input-control&quot;&nbsp;type=&quot;password&quot;&nbsp;name=&quot;passwd&quot;&nbsp;value=&quot;1111&quot;&gt;</br>或:</br>&lt;div&nbsp;ui=&quot;type:input-control;name:passwd;value:1111;inputType:password&quot;&gt;&lt;/div&gt;</br>或:</br>&lt;div&nbsp;ui=&quot;type:input-control&quot;&gt;</br>&lt;input&nbsp;type=&quot;password&quot;&nbsp;name=&quot;passwd&quot;&nbsp;value=&quot;1111&quot;&gt;</br>&lt;/div&gt;</br></br>","children":[ {"name":"Checkbox","brief":"初始化复选框控件。","fileName":"Checkbox"},{"name":"Text","brief":"初始化格式化输入框控件。","fileName":"Text"},{"name":"Radio","brief":"初始化单选框控件。","fileName":"Radio"},{"name":"Select","brief":"初始化下拉框控件。","fileName":"Select"}],"methods":[ {"fileName":"InputControl-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"InputControl-className","isEvent":"","brief":""},{"fileName":"InputControl-cssText","isEvent":"","brief":""},{"fileName":"InputControl-$blur","isEvent":"","brief":""},{"fileName":"InputControl-$disable","isEvent":"","brief":"控件失效，阻止输入框提交"},{"fileName":"InputControl-$dispose","isEvent":"","brief":""},{"fileName":"InputControl-$enable","isEvent":"","brief":"控件解除失效，需要将输入框设置为可提交"},{"fileName":"InputControl-$focus","isEvent":"","brief":""},{"fileName":"InputControl-$input","isEvent":"","brief":"输入框内容改变事件的默认处理。"},{"fileName":"InputControl-$reset","isEvent":"","brief":"输入重置事件的默认处理。"},{"fileName":"InputControl-$setParent","isEvent":"","brief":""},{"fileName":"InputControl-$setValue","isEvent":"","brief":"设置控件的值。"},{"fileName":"InputControl-$submit","isEvent":"","brief":"输入提交事件的默认处理。"},{"fileName":"InputControl-$validate","isEvent":"","brief":"输入格式校验事件的默认处理。"},{"fileName":"InputControl-getInput","isEvent":"","brief":"获取控件的输入元素。"},{"fileName":"InputControl-getName","isEvent":"","brief":"获取控件的名称。"},{"fileName":"InputControl-getValue","isEvent":"","brief":"获取控件的值。"},{"fileName":"InputControl-setName","isEvent":"","brief":"设置控件的名称。"},{"fileName":"InputControl-setValue","isEvent":"","brief":"设置控件的值。"}],"variables":[{"repeat":"","name":"_bBlur","desc":"失去焦点时是否需要校验"}, {"repeat":"","name":"_eInput","desc":""}]}, {"name":"Table.Cell","fileName":"Table-Cell","parent":"Control","brief":"初始化表格控件的单元格部件。","desc":"","access":"public","pathFrom":"...\\src\\table.js","example":"","children":[],"methods":[ {"fileName":"Table-Cell-getHeight","isEvent":"","brief":""},{"fileName":"Table-Cell-getWidth","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_bHeadFloat","desc":"表头飘浮"}, {"repeat":"","name":"_aHCells","desc":"表格头单元格控件对象"}, {"repeat":"","name":"_aRows","desc":"表格数据行对象"}, {"repeat":"","name":"_uHead","desc":"表头区域"}]}, {"name":"Progress","fileName":"Progress","parent":"Control","brief":"初始化进度控件。","desc":"options&nbsp;对象支持的属性如下：</br>max&nbsp;最大值</br>value&nbsp;当前值</br>","access":"public","pathFrom":"...\\src\\progress.js","example":"Progress&nbsp;-&nbsp;定义进度显示的基本操作，不建议直接初始化。</br>进度控件，继承自基础控件，面向用户显示一个任务执行的程度。</br></br>进度控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:progress;max:100;value:0&quot;&gt;&lt;/div&gt;</br></br>","children":[ {"name":"ProgressBar","brief":"初始化进度条控件。","fileName":"ProgressBar"},{"name":"ProgressCircle","brief":"初始化进度条控件。","fileName":"ProgressCircle"}],"methods":[ {"fileName":"Progress-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Progress-$progress","isEvent":"","brief":"进度变化的默认处理。"},{"fileName":"Progress-getMax","isEvent":"","brief":"获取进度的最大值。"},{"fileName":"Progress-getValue","isEvent":"","brief":"获取进度的当前值。"},{"fileName":"Progress-init","isEvent":"","brief":""},{"fileName":"Progress-setMax","isEvent":"","brief":"设置进度的最大值。"},{"fileName":"Progress-setValue","isEvent":"","brief":"设置进度的当前值。"}],"variables":[{"repeat":"","name":"_nValue","desc":"进度值"}, {"repeat":"","name":"_eText","desc":""}, {"repeat":"","name":"_eMask","desc":""}, {"repeat":"","name":"_sFormat","desc":""}, {"repeat":"","name":"_nMax","desc":""}]}, {"name":"Table","fileName":"Table","parent":"Control","brief":"初始化表格控件。","desc":"options&nbsp;对象支持的属性如下：</br>head-float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表头允许飘浮，默认不允许</br>","access":"public","pathFrom":"...\\src\\table.js","example":"Table&nbsp;-&nbsp;定义由行列构成的表格的基本操作。</br>表格控件，继承自截面控件，对基本的&nbsp;TableElement&nbsp;功能进行了扩展，表头固定，不会随表格的垂直滚动条滚动而滚动，在行列滚动时，支持整行整列移动，允许直接对表格的数据进行增加/删除/修改操作。</br></br>表格控件直接HTML初始化的例子:</br>&lt;!--&nbsp;如果需要滚动条，请设置div的width样式到合适的值，并且在div外部再包一个div显示滚动条&nbsp;--&gt;</br>&lt;div&nbsp;ui=&quot;type:table&quot;&gt;</br>&lt;table&gt;</br>&lt;!--&nbsp;表头区域&nbsp;--&gt;</br>&lt;thead&gt;</br>&lt;tr&gt;</br>&lt;th&nbsp;style=&quot;width:200px;&quot;&gt;公司名&lt;/th&gt;</br>&lt;th&nbsp;style=&quot;width:200px;&quot;&gt;url&lt;/th&gt;</br>&lt;th&nbsp;style=&quot;width:250px;&quot;&gt;地址&lt;/th&gt;</br>&lt;th&nbsp;style=&quot;width:100px;&quot;&gt;创办时间&lt;/th&gt;</br>&lt;/tr&gt;</br>&lt;/thead&gt;</br>&lt;!--&nbsp;内容行区域&nbsp;--&gt;</br>&lt;tbody&gt;</br>&lt;tr&gt;</br>&lt;td&gt;百度&lt;/td&gt;</br>&lt;td&gt;www.baidu.com&lt;/td&gt;</br>&lt;td&gt;中国北京中关村&lt;/td&gt;</br>&lt;td&gt;1999&lt;/td&gt;</br>&lt;/tr&gt;</br>&lt;/tbody&gt;</br>&lt;/table&gt;</br>&lt;/div&gt;</br></br></br>行属性</br>","children":[ {"name":"LockedTable","brief":"初始化高级表格控件。","fileName":"LockedTable"}],"methods":[ {"fileName":"Table-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Table-className","isEvent":"","brief":""},{"fileName":"Table-width","isEvent":"","brief":""},{"fileName":"Table-$cache","isEvent":"","brief":""},{"fileName":"Table-$dispose","isEvent":"","brief":""},{"fileName":"Table-$getElement","isEvent":"","brief":"获取单元格主元素。"},{"fileName":"Table-$initStructure","isEvent":"","brief":""},{"fileName":"Table-$resize","isEvent":"","brief":""},{"fileName":"Table-$scroll","isEvent":"","brief":""},{"fileName":"Table-addColumn","isEvent":"","brief":"增加一列。"},{"fileName":"Table-addRow","isEvent":"","brief":"增加一行。"},{"fileName":"Table-getCell","isEvent":"","brief":"获取单元格控件。"},{"fileName":"Table-getColumnCount","isEvent":"","brief":"获取表格列的数量。"},{"fileName":"Table-getHCell","isEvent":"","brief":"获取表头单元格控件。"},{"fileName":"Table-getHCells","isEvent":"","brief":"获取全部的表头单元格控件。"},{"fileName":"Table-getLayout","isEvent":"","brief":"获取定位的&nbsp;DOM&nbsp;元素。"},{"fileName":"Table-getRow","isEvent":"","brief":"获取行控件。"},{"fileName":"Table-getRowCount","isEvent":"","brief":"获取表格行的数量。"},{"fileName":"Table-getRows","isEvent":"","brief":"获取全部的行控件。"},{"fileName":"Table-init","isEvent":"","brief":""},{"fileName":"Table-removeColumn","isEvent":"","brief":"移除一列并释放占用的空间。"},{"fileName":"Table-removeRow","isEvent":"","brief":"移除一行并释放占用的空间。"}],"variables":[{"repeat":"","name":"_bHeadFloat","desc":"表头飘浮"}, {"repeat":"","name":"_aHCells","desc":"表格头单元格控件对象"}, {"repeat":"","name":"_aRows","desc":"表格数据行对象"}, {"repeat":"","name":"_uHead","desc":"表头区域"}, {"repeat":"","name":"_eLayout","desc":""}, {"repeat":"","name":"_sRowClass","desc":""}, {"repeat":"","name":"_sHCellClass","desc":""}, {"repeat":"","name":"_sCellClass","desc":""}, {"repeat":"","name":"_aHeadRows","desc":""}]}, {"name":"Table.Row","fileName":"Table-Row","parent":"Control","brief":"初始化表格控件的行部件。","desc":"","access":"public","pathFrom":"...\\src\\table.js","example":"","children":[ {"name":"LockedTable.prototype.Row","brief":"初始化高级表格行控件。","fileName":"LockedTable-prototype-Row"}],"methods":[ {"fileName":"Table-Row-$dispose","isEvent":"","brief":""},{"fileName":"Table-Row-$getElements","isEvent":"","brief":"获取一行内所有单元格的主元素。"},{"fileName":"Table-Row-$hide","isEvent":"","brief":""},{"fileName":"Table-Row-$show","isEvent":"","brief":""},{"fileName":"Table-Row-getCell","isEvent":"","brief":"获取单元格控件。"},{"fileName":"Table-Row-getCells","isEvent":"","brief":"获取全部单元格控件。"},{"fileName":"Table-Row-setSize","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_bHeadFloat","desc":"表头飘浮"}, {"repeat":"","name":"_aHCells","desc":"表格头单元格控件对象"}, {"repeat":"","name":"_aRows","desc":"表格数据行对象"}, {"repeat":"","name":"_uHead","desc":"表头区域"}, {"repeat":"","name":"_aElements","desc":""}]}, {"name":"CalendarInput","fileName":"CalendarInput","parent":"Text","brief":"初始化日历输入框控件。","desc":"","access":"public","pathFrom":"...\\src\\calendar-input.js","example":"calendar&nbsp;-&nbsp;日历输入框控件。</br>日历输入框控件，继承自文本输入框控件，提供日期的选择输入功能。</br></br>日历视图控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:calendar-input&quot;&gt;&lt;/div&gt;</br></br></br>子控件属性</br>","children":[],"methods":[ {"fileName":"CalendarInput-constructionMethod","isEvent":"","brief":"构造方法"}],"variables":[{"repeat":"","name":"_eTitle","desc":"日历头部信息提示区"}]}, {"name":"Calendar","fileName":"Calendar","parent":"MonthView","brief":"初始化日历控件。","desc":"","access":"public","pathFrom":"...\\src\\calendar.js","example":"calendar&nbsp;-&nbsp;日历控件。</br>日历控件，继承自日历视图控件，包含头部展示操作区域、日历展示区域。头部展示操作区域中的四个按钮包含年/月的切换功能，他们继承自button控件。</br></br>日历控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:calendar;year:2009;month:11&quot;&gt;&lt;/div&gt;</br></br>","children":[],"methods":[ {"fileName":"Calendar-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Calendar-$change","isEvent":"","brief":""},{"fileName":"Calendar-$dispose","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_eTitle","desc":""}]}, {"name":"Combox","fileName":"Combox","parent":"Select","brief":"初始化可输入下拉框控件。","desc":"options&nbsp;对象支持的属性如下：</br>","access":"public","pathFrom":"...\\src\\combox.js","example":"Combox&nbsp;-&nbsp;定义可输入下拉框行为的基本操作。</br>可输入下拉框控件，继承自下拉框控件，在下拉框控件的基础上允许选项框可输入内容。</br></br>可输入下拉框控件直接HTML初始化的例子:</br>&lt;select&nbsp;ui=&quot;type:combox&quot;&nbsp;name=&quot;age&quot;&gt;</br>&lt;option&nbsp;value=&quot;20&quot;&gt;20&lt;/option&gt;</br>&lt;option&nbsp;value=&quot;21&quot;&nbsp;selected=&quot;selected&quot;&gt;21&lt;/option&gt;</br>&lt;option&nbsp;value=&quot;22&quot;&gt;22&lt;/option&gt;</br>&lt;/select&gt;</br>或</br>&lt;div&nbsp;ui=&quot;type:combox;name:age;value:21&quot;&gt;</br>&lt;div&nbsp;ui=&quot;value:20&quot;&gt;20&lt;/div&gt;</br>&lt;div&nbsp;ui=&quot;value:21&quot;&gt;21&lt;/div&gt;</br>&lt;div&nbsp;ui=&quot;value:22&quot;&gt;22&lt;/div&gt;</br>&lt;/div&gt;</br></br>如果需要自定义特殊的选项效果，请按下列方法初始化:</br>&lt;div&nbsp;ui=&quot;type:combox&quot;&gt;</br>&lt;!--&nbsp;如果ec中不指定name，也可以在input中指定&nbsp;--&gt;</br>&lt;input&nbsp;name=&quot;test&quot;&nbsp;/&gt;</br>&lt;!--&nbsp;这里放选项内容&nbsp;--&gt;</br>&lt;div&nbsp;value=&quot;值&quot;&gt;文本&lt;/div&gt;</br>...</br>&lt;/div&gt;</br></br>","children":[],"methods":[ {"fileName":"Combox-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Combox-$disable","isEvent":"","brief":"控件失效，阻止输入框提交"},{"fileName":"Combox-$enable","isEvent":"","brief":"控件解除失效，需要将输入框设置为可提交"},{"fileName":"Combox-$initStructure","isEvent":"","brief":""},{"fileName":"Combox-$input","isEvent":"","brief":""},{"fileName":"Combox-setValue","isEvent":"","brief":""}],"variables":[]}, {"name":"Text","fileName":"Text","parent":"InputControl","brief":"初始化格式化输入框控件。","desc":"options&nbsp;对象支持的属性如下：</br>trim&nbsp;是否进行前后空格过滤，默认为&nbsp;true&nbsp;(注：粘贴内容也会进行前后空格过滤)</br>len&nbsp;[aaa,bbb]表示数字允许的最小(aaa)/最大(bbb)长度</br>num&nbsp;[aaa,bbb]表示数字允许的最小(aaa)/最大(bbb)值</br>regexp&nbsp;正则表达式，自动在两端添加^与$</br>","access":"public","pathFrom":"...\\src\\text.js","example":"Text&nbsp;-&nbsp;定义文本输入数据的基本操作。</br>文本输入框控件，继承自输入框控件，允许对输入的数据内容格式进行限制。</br></br>文本输入框控件直接HTML初始化的例子:</br>&lt;input&nbsp;ui=&quot;type:text&quot;&nbsp;name=&quot;test&quot;&nbsp;/&gt;</br>或:</br>&lt;div&nbsp;ui=&quot;type:text;name:test;value:test&quot;&gt;</br>&lt;!--&nbsp;如果ec中不指定name,value，也可以在input中指定&nbsp;--&gt;</br>&lt;input&nbsp;name=&quot;test&quot;&nbsp;value=&quot;test&quot;&nbsp;/&gt;</br>&lt;/div&gt;</br></br>","children":[ {"name":"CalendarInput","brief":"初始化日历输入框控件。","fileName":"CalendarInput"}],"methods":[ {"fileName":"Text-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Text-innerHTML","isEvent":"","brief":""},{"fileName":"Text-$cache","isEvent":"","brief":""},{"fileName":"Text-$disable","isEvent":"","brief":"控件失效，阻止输入框提交"},{"fileName":"Text-$dispose","isEvent":"","brief":""},{"fileName":"Text-$enable","isEvent":"","brief":"控件解除失效，需要将输入框设置为可提交"},{"fileName":"Text-$error","isEvent":"","brief":"控件格式校验错误的默认处理。"},{"fileName":"Text-$focus","isEvent":"","brief":""},{"fileName":"Text-$initStructure","isEvent":"","brief":""},{"fileName":"Text-$input","isEvent":"","brief":"控件内容改变事件的默认处理。"},{"fileName":"Text-$ready","isEvent":"","brief":""},{"fileName":"Text-$validate","isEvent":"","brief":""},{"fileName":"Text-getSelectionEnd","isEvent":"","brief":"获取当前当前选区的结束位置。"},{"fileName":"Text-getSelectionStart","isEvent":"","brief":"获取当前选区的起始位置。"},{"fileName":"Text-setCaret","isEvent":"","brief":"设置输入框光标的位置。"}],"variables":[{"repeat":"","name":"_bTrim","desc":"字符串是否需要过滤两端空白"}, {"repeat":"","name":"_nMinLength","desc":"允许提将近最小长度"}, {"repeat":"","name":"_nMaxLength","desc":"允许提交的最大长度"}, {"repeat":"","name":"_nMinValue","desc":"允许提交的最小值"}, {"repeat":"","name":"_nMaxValue","desc":"允许提交的最大值"}, {"repeat":"","name":"_sErrValue","desc":"检验错误的文本值"}, {"repeat":"","name":"_oRegExp","desc":"允许提交的格式正则表达式"}, {"repeat":"","name":"_ePlaceHolder","desc":""}, {"repeat":"可能与...\\src\\input-control.js文件中,InputControl控件下变量重名","name":"_eInput","desc":""}]}, {"name":"Radio","fileName":"Radio","parent":"InputControl","brief":"初始化单选框控件。","desc":"options&nbsp;对象支持的属性如下：</br>","access":"public","pathFrom":"...\\src\\radio.js","example":"Radio&nbsp;-&nbsp;定义一组选项中选择唯一选项的基本操作。</br>单选框控件，继承自输入框控件，实现了对原生&nbsp;InputElement&nbsp;单选框的功能扩展，支持对选中的图案的选择。单选框控件适用所有在一组中只允许选择一个目标的交互，并不局限于此分组的表现形式(文本、图片等)。</br></br>单选框控件直接HTML初始化的例子:</br>&lt;input&nbsp;ui=&quot;type:radio&quot;&nbsp;name=&quot;city&quot;&nbsp;value=&quot;beijing&quot;&nbsp;checked=&quot;checked&quot;&nbsp;type=&quot;radio&quot;&gt;</br>或</br>&lt;div&nbsp;ui=&quot;type:radio;name:city;value:beijing;checked:true&quot;&gt;&lt;/div&gt;</br>或</br>&lt;div&nbsp;ui=&quot;type:radio&quot;&gt;</br>&lt;input&nbsp;name=&quot;city&quot;&nbsp;value=&quot;beijing&quot;&nbsp;checked=&quot;checked&quot;&nbsp;type=&quot;radio&quot;&gt;</br>&lt;/div&gt;</br></br>","children":[],"methods":[ {"fileName":"Radio-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Radio-$click","isEvent":"","brief":"控件点击时将控件设置成为选中状态，同时取消同一个单选框控件组的其它控件的选中状态。"},{"fileName":"Radio-$keydown","isEvent":"","brief":"接管对空格键的处理。"},{"fileName":"Radio-$keypress","isEvent":"","brief":"接管对空格键的处理。"},{"fileName":"Radio-$keyup","isEvent":"","brief":"接管对空格键的处理。"},{"fileName":"Radio-$ready","isEvent":"","brief":""},{"fileName":"Radio-$reset","isEvent":"","brief":""},{"fileName":"Radio-getItems","isEvent":"","brief":"获取与当前单选框同组的全部单选框。"},{"fileName":"Radio-isChecked","isEvent":"","brief":"判断控件是否选中。"},{"fileName":"Radio-setChecked","isEvent":"","brief":"设置单选框控件选中状态。"}],"variables":[{"repeat":"","name":"_bDefault","desc":""}]}, {"name":"MultilevelSelect.Select.prototype.Item","fileName":"MultilevelSelect-Select-prototype-Item","parent":"Select.Item","brief":"控件的选项部件。","desc":"","access":"public","pathFrom":"...\\src\\multilevel-select.js","example":"","children":[],"methods":[ {"fileName":"MultilevelSelect-Select-prototype-Item-constructionMethod","isEvent":"","brief":"构造方法"}],"variables":[{"repeat":"","name":"_aChildren","desc":""}]}, {"name":"Table.HCell","fileName":"Table-HCell","parent":"Control","brief":"初始化表格控件的列部件。","desc":"","access":"public","pathFrom":"...\\src\\table.js","example":"","children":[],"methods":[ {"fileName":"Table-HCell-$hide","isEvent":"","brief":""},{"fileName":"Table-HCell-$setStyles","isEvent":"","brief":"设置整列的样式。"},{"fileName":"Table-HCell-$show","isEvent":"","brief":""},{"fileName":"Table-HCell-getCell","isEvent":"","brief":"获取单元格控件。"},{"fileName":"Table-HCell-getCells","isEvent":"","brief":"获取全部单元格控件。"},{"fileName":"Table-HCell-setSize","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_bHeadFloat","desc":"表头飘浮"}, {"repeat":"","name":"_aHCells","desc":"表格头单元格控件对象"}, {"repeat":"","name":"_aRows","desc":"表格数据行对象"}, {"repeat":"","name":"_uHead","desc":"表头区域"}]}, {"name":"ProgressCircle","fileName":"ProgressCircle","parent":"Progress","brief":"初始化进度条控件。","desc":"options&nbsp;对象支持的属性如下：</br>","access":"public","pathFrom":"...\\src\\progress-circle.js","example":"ProgressCircle&nbsp;-&nbsp;使用进度圆定义进度。</br>进度圆控件，继承自进度控件，使用进度圆显示一个任务执行的程度。</br></br>进度圆控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:progress-circle;max:100;value:0&quot;&gt;&lt;/div&gt;</br></br>","children":[],"methods":[ {"fileName":"ProgressCircle-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"ProgressCircle-$dispose","isEvent":"","brief":""},{"fileName":"ProgressCircle-$initStructure","isEvent":"","brief":""},{"fileName":"ProgressCircle-$progress","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_ePath","desc":""}]}, {"name":"Tab","fileName":"Tab","parent":"Control","brief":"初始化选项卡控件。","desc":"options&nbsp;对象支持的特定属性如下：</br>selected&nbsp;选中的选项序号，默认为0</br>","access":"public","pathFrom":"...\\src\\tab.js","example":"Tab&nbsp;-&nbsp;定义分页选项卡的操作。</br>选项卡控件，继承自基础控件，实现了选项组接口。每一个选项卡都包含一个头部区域与容器区域，选项卡控件存在互斥性，只有唯一的一个选项卡能被选中并显示容器区域。</br></br>直接初始化选项卡控件的例子</br>&lt;div&nbsp;ui=&quot;type:tab;selected:1&quot;&gt;</br>&lt;!--&nbsp;包含容器的选项卡&nbsp;--&gt;</br>&lt;div&gt;</br>&lt;strong&gt;标题1&lt;/strong&gt;</br>&lt;!--&nbsp;这里是容器&nbsp;--&gt;</br>...</br>&lt;/div&gt;</br>&lt;!--&nbsp;仅有标题的选项卡，以下selected定义与控件定义是一致的，可以忽略其中之一&nbsp;--&gt;</br>&lt;strong&nbsp;ui=&quot;selected:true&quot;&gt;标题2&lt;/strong&gt;</br>&lt;/div&gt;</br></br></br>Item属性</br>","children":[],"methods":[ {"fileName":"Tab-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Tab-className","isEvent":"","brief":""},{"fileName":"Tab-cssText","isEvent":"","brief":""},{"fileName":"Tab-$alterItems","isEvent":"","brief":""},{"fileName":"Tab-$itemclick","isEvent":"","brief":""},{"fileName":"Tab-$ready","isEvent":"","brief":""},{"fileName":"Tab-$remove","isEvent":"","brief":""},{"fileName":"Tab-getSelected","isEvent":"","brief":"获得当前选中的选项卡控件。"},{"fileName":"Tab-setSelected","isEvent":"","brief":"设置被选中的选项卡。"}],"variables":[{"repeat":"","name":"_cSelected","desc":"当前选中的选项卡"}]}, {"name":"Dialog.Title","fileName":"Dialog-Title","parent":"Control","brief":"初始化窗体控件的标题栏部件。","desc":"","access":"public","pathFrom":"...\\src\\dialog.js","example":"","children":[],"methods":[ {"fileName":"Dialog-Title-$activate","isEvent":"","brief":"标题栏激活时触发拖动，如果当前窗体未得到焦点则得到焦点。"}],"variables":[{"repeat":"","name":"_bModal","desc":"是否使用showModal激活"}, {"repeat":"","name":"_uTitle","desc":"标题栏"}]}, {"name":"Listbox.Item","fileName":"Listbox-Item","parent":"Item","brief":"初始化多选框控件的选项部件。","desc":"","access":"public","pathFrom":"...\\src\\listbox.js","example":"","children":[],"methods":[ {"fileName":"Listbox-Item-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Listbox-Item-$click","isEvent":"","brief":""},{"fileName":"Listbox-Item-$dispose","isEvent":"","brief":""},{"fileName":"Listbox-Item-$setParent","isEvent":"","brief":""},{"fileName":"Listbox-Item-isSelected","isEvent":"","brief":"判断多选框的选项控件是否被选中。"},{"fileName":"Listbox-Item-setSelected","isEvent":"","brief":"设置选中状态。"}],"variables":[{"repeat":"","name":"_sName","desc":"多选框内所有input的名称"}, {"repeat":"","name":"_eInput","desc":""}]}, {"name":"MultilevelSelect","fileName":"MultilevelSelect","parent":"Control","brief":"初始化多级联动下拉框控件。","desc":"","access":"public","pathFrom":"...\\src\\multilevel-select.js","example":"multilevel-select&nbsp;-&nbsp;多级联动下拉框控件。</br>多级联动下拉框控件，继承自基础控件，内部包含的下拉框能够对指定的数据集合进行多级联动。</br></br>多级联动下拉框控件直接HTML初始化的例子:</br>&lt;div&nbsp;ui=&quot;type:multilevel-select&quot;&gt;</br>&lt;select&nbsp;name=&quot;province&quot;&gt;&lt;/select&gt;</br>&lt;select&nbsp;name=&quot;city&quot;&gt;&lt;/select&gt;</br>&lt;/div&gt;</br></br>","children":[],"methods":[ {"fileName":"MultilevelSelect-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"MultilevelSelect-getSelect","isEvent":"","brief":"获取指定的下拉框对象。"},{"fileName":"MultilevelSelect-setData","isEvent":"","brief":"设置多级联动的数据。"}],"variables":[{"repeat":"","name":"_aSelect","desc":""}]}, {"name":"Select","fileName":"Select","parent":"InputControl","brief":"初始化下拉框控件。","desc":"options&nbsp;对象支持的属性如下：</br>optionSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下拉框最大允许显示的选项数量，默认为5</br>","access":"public","pathFrom":"...\\src\\select.js","example":"Select&nbsp;-&nbsp;定义模拟下拉框行为的基本操作。</br>下拉框控件，继承自输入控件，实现了选项组接口，扩展了原生&nbsp;SelectElement&nbsp;的功能，允许指定下拉选项框的最大选项数量，在屏幕显示不下的时候，会自动显示在下拉框的上方。在没有选项时，下拉选项框有一个选项的高度。下拉框控件允许使用键盘与滚轮操作，在下拉选项框打开时，可以通过回车键或鼠标点击选择，上下键选择选项的当前条目，在关闭下拉选项框后，只要拥有焦点，就可以通过滚轮上下选择选项。</br></br>下拉框控件直接HTML初始化的例子:</br>&lt;select&nbsp;ui=&quot;type:select&quot;&nbsp;name=&quot;sex&quot;&gt;</br>&lt;option&nbsp;value=&quot;male&quot;&nbsp;selected=&quot;selected&quot;&gt;男&lt;/option&gt;</br>&lt;option&nbsp;value=&quot;female&quot;&gt;女&lt;/option&gt;</br>&lt;/select&gt;</br>或</br>&lt;div&nbsp;ui=&quot;type:select;name:sex;value:male&quot;&gt;</br>&lt;div&nbsp;ui=&quot;value:male&quot;&gt;男&lt;/div&gt;</br>&lt;div&nbsp;ui=&quot;value:female&quot;&gt;女&lt;/div&gt;</br>&lt;/div&gt;</br></br>","children":[ {"name":"Combox","brief":"初始化可输入下拉框控件。","fileName":"Combox"},{"name":"MultilevelSelect.Select","brief":"控件的下拉框部件。","fileName":"MultilevelSelect-Select"}],"methods":[ {"fileName":"Select-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Select-className","isEvent":"","brief":""},{"fileName":"Select-cssText","isEvent":"","brief":""},{"fileName":"Select-$alterItems","isEvent":"","brief":"选项控件发生变化的处理。"},{"fileName":"Select-$cache","isEvent":"","brief":""},{"fileName":"Select-$change","isEvent":"","brief":"选项改变事件默认处理。"},{"fileName":"Select-$initPopup","isEvent":"","brief":"弹出层初始化。"},{"fileName":"Select-$initStructure","isEvent":"","brief":""},{"fileName":"Select-$keydown","isEvent":"","brief":"接管对上下键与回车/ESC键的处理。"},{"fileName":"Select-$keypress","isEvent":"","brief":"接管对上下键与回车/ESC键的处理。"},{"fileName":"Select-$keyup","isEvent":"","brief":"接管对上下键与回车/ESC键的处理。"},{"fileName":"Select-$mousewheel","isEvent":"","brief":""},{"fileName":"Select-$ready","isEvent":"","brief":""},{"fileName":"Select-$reset","isEvent":"","brief":""},{"fileName":"Select-$remove","isEvent":"","brief":"下拉框移除子选项时，如果选项被选中，需要先取消选中。"},{"fileName":"Select-getSelected","isEvent":"","brief":"获取被选中的选项控件。"},{"fileName":"Select-setOptionSize","isEvent":"","brief":"设置下拉框允许显示的选项数量。"},{"fileName":"Select-setSelectedIndex","isEvent":"","brief":"根据序号选中选项。"},{"fileName":"Select-setValue","isEvent":"","brief":"设置控件的值。"}],"variables":[{"repeat":"","name":"_nOptionSize","desc":"下接选择框可以用于选择的条目数量"}, {"repeat":"","name":"_cSelected","desc":"当前选中的选项"}, {"repeat":"","name":"_uText","desc":"下拉框的文本框"}, {"repeat":"","name":"_uOptions","desc":""}]}, {"name":"LockedTable.prototype.Row","fileName":"LockedTable-prototype-Row","parent":"Table.Row","brief":"初始化高级表格行控件。","desc":"","access":"public","pathFrom":"...\\src\\locked-table.js","example":"","children":[],"methods":[ {"fileName":"LockedTable-prototype-Row-$dispose","isEvent":"","brief":""}],"variables":[{"repeat":"","name":"_nLeft","desc":"最左部未锁定列的序号"}, {"repeat":"","name":"_nRight","desc":"最右部未锁定列的后续序号，即未锁定的列序号+1"}, {"repeat":"","name":"_uLockedHead","desc":"锁定的表头区"}, {"repeat":"","name":"_uLockedMain","desc":"锁定的行内容区"}, {"repeat":"","name":"_eLeft","desc":""}, {"repeat":"","name":"_eRight","desc":""}]}, {"name":"TreeView","fileName":"TreeView","parent":"Control","brief":"初始化树视图控件。","desc":"options&nbsp;对象支持的属性如下：</br>collapsed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;子树区域是否收缩，默认为展开</br>autoType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;是否自动根据子节点数量转换节点的状态(叶子节点/非叶子节点)</br>expandSelected&nbsp;是否展开选中的节点，如果不自动展开，需要点击左部的小区域图标才有效，默认自动展开</br>","access":"public","pathFrom":"...\\src\\tree-view.js","example":"TreeView&nbsp;-&nbsp;定义树形视图的基本操作。</br>树视图控件，继承自基础控件，不可以被改变大小，可以包含普通子控件或者子树视图控件，普通子控件显示在它的文本区域，如果是子树视图控件，将在专门的子树视图控件区域显示。子树视图控件区域可以被收缩隐藏或是展开显示，默认情况下点击树视图控件就改变子树视图控件区域的状态。</br></br>树视图控件直接HTML初始化的例子:</br>&lt;ul&nbsp;ui=&quot;type:tree-view;&quot;&gt;</br>&lt;!--&nbsp;显示的文本，如果没有label整个内容就是节点的文本&nbsp;--&gt;</br>&lt;div&gt;公司&lt;/div&gt;</br>&lt;!--&nbsp;子控件&nbsp;--&gt;</br>&lt;li&gt;董事会&lt;/li&gt;</br>&lt;li&gt;监事会&lt;/li&gt;</br>&lt;ul&gt;</br>&lt;div&gt;总经理&lt;/div&gt;</br>&lt;li&gt;行政部&lt;/li&gt;</br>&lt;li&gt;人事部&lt;/li&gt;</br>&lt;li&gt;财务部&lt;/li&gt;</br>&lt;li&gt;市场部&lt;/li&gt;</br>&lt;li&gt;销售部&lt;/li&gt;</br>&lt;li&gt;技术部&lt;/li&gt;</br>&lt;/ul&gt;</br>&lt;/ul&gt;</br></br>","children":[ {"name":"CheckTree","brief":"初始化复选树控件。","fileName":"CheckTree"}],"methods":[ {"fileName":"TreeView-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"TreeView-$cache","isEvent":"","brief":""},{"fileName":"TreeView-$click","isEvent":"","brief":"控件点击时改变子树视图控件的显示/隐藏状态。"},{"fileName":"TreeView-$dispose","isEvent":"","brief":""},{"fileName":"TreeView-$hide","isEvent":"","brief":"隐藏树视图控件的同时需要将子树区域也隐藏。"},{"fileName":"TreeView-$mouseout","isEvent":"","brief":""},{"fileName":"TreeView-$mouseover","isEvent":"","brief":""},{"fileName":"TreeView-$nodeclick","isEvent":"","brief":"节点点击事件的默认处理。"},{"fileName":"TreeView-$nodeout","isEvent":"","brief":"节点移出事件的默认处理。"},{"fileName":"TreeView-$nodeover","isEvent":"","brief":"节点移入事件的默认处理。"},{"fileName":"TreeView-$setParent","isEvent":"","brief":"树视图控件改变位置时，需要将自己的子树区域显示在主元素之后。"},{"fileName":"TreeView-$show","isEvent":"","brief":"显示树视图控件的同时需要将子树视图区域也显示。"},{"fileName":"TreeView-add","isEvent":"","brief":"添加子树视图控件。"},{"fileName":"TreeView-collapse","isEvent":"","brief":"收缩当前树视图控件的子树区域。"},{"fileName":"TreeView-expand","isEvent":"","brief":"展开当前树视图控件的子树区域。"},{"fileName":"TreeView-getChildren","isEvent":"","brief":"获取当前树视图控件的所有子树视图控件。"},{"fileName":"TreeView-getRoot","isEvent":"","brief":"获取当前树视图控件的根控件。"},{"fileName":"TreeView-init","isEvent":"","brief":""},{"fileName":"TreeView-isCollapsed","isEvent":"","brief":"当前子树区域是否收缩。"}],"variables":[{"repeat":"","name":"_bCollapsed","desc":"是否收缩子树"}, {"repeat":"","name":"_eChildren","desc":"子控件区域Element对象"}, {"repeat":"","name":"_bAutoType","desc":""}, {"repeat":"","name":"_aChildren","desc":""}]}, {"name":"MultilevelSelect.Select","fileName":"MultilevelSelect-Select","parent":"Select","brief":"控件的下拉框部件。","desc":"","access":"public","pathFrom":"...\\src\\multilevel-select.js","example":"","children":[],"methods":[ {"fileName":"MultilevelSelect-Select-$change","isEvent":"","brief":""}],"variables":[]}, {"name":"Select.Item","fileName":"Select-Item","parent":"Item","brief":"初始化下拉框控件的选项部件。","desc":"","access":"public","pathFrom":"...\\src\\select.js","example":"","children":[ {"name":"MultilevelSelect.Select.prototype.Item","brief":"控件的选项部件。","fileName":"MultilevelSelect-Select-prototype-Item"},{"name":"Combox.prototype.Item","brief":"初始化可输入下拉框控件的选项部件。","fileName":"Combox-prototype-Item"}],"methods":[ {"fileName":"Select-Item-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"Select-Item-$click","isEvent":"","brief":""},{"fileName":"Select-Item-getValue","isEvent":"","brief":"获取选项的值。"},{"fileName":"Select-Item-setValue","isEvent":"","brief":"设置选项的值。"}],"variables":[{"repeat":"","name":"_nOptionSize","desc":"下接选择框可以用于选择的条目数量"}, {"repeat":"","name":"_cSelected","desc":"当前选中的选项"}, {"repeat":"","name":"_uText","desc":"下拉框的文本框"}, {"repeat":"","name":"_sValue","desc":""}]}, {"name":"esr.CreateArray","fileName":"esr-CreateArray","parent":"Control","brief":"","desc":"","access":"","pathFrom":"...\\src\\esr.js","example":"","children":[],"methods":[ {"fileName":"esr-CreateArray-constructionMethod","isEvent":"","brief":"构造方法"},{"fileName":"esr-CreateArray-getValue","isEvent":"","brief":""}],"variables":[]}, {"name":"Combox.prototype.Item","fileName":"Combox-prototype-Item","parent":"Select.Item","brief":"初始化可输入下拉框控件的选项部件。","desc":"","access":"public","pathFrom":"...\\src\\combox.js","example":"","children":[],"methods":[],"variables":[]}]